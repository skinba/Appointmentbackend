{"version":3,"sources":["../src/app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","file":"app.js","sourcesContent":["// import express from \"express\";\r\n// import mongoose from \"mongoose\";\r\n// import {\r\n//     router\r\n// } from \"./config/routes\";\r\n// // import swaggerUi from 'swagger-ui-express';\r\n// // import swaggerDocument from './config/swagger';\r\n\r\n// import logger from 'morgan';\r\n// import cors from 'cors';\r\n// import { devConfig } from \"./config/env/development\";\r\n// import passport from \"passport\";\r\n// import { configureJWTStrategy } from \"./api/middlewares/passport-jwt\";\r\n\r\n\r\n// mongoose.Promise = global.Promise;\r\n// const db = 'mongodb://user98:user98@ds229258.mlab.com:29258/appointmentdb';\r\n\r\n\r\n// const app = express();\r\n// const PORT = devConfig.port;\r\n// const apiKey = devConfig.secret;\r\n\r\n// mongoose.connect(db, err => {\r\n//     if (err) {\r\n//       console.log('Error !' + err);\r\n//     } else {\r\n//       console.log('connected to mongoDB');\r\n//     }\r\n//   });\r\n\r\n// app.use(cors());\r\n// app.use(express.json());\r\n// app.use(express.urlencoded());\r\n// app.use('/api', router);\r\n// app.use(logger('dev'));\r\n// app.use(passport.initialize());\r\n// configureJWTStrategy();\r\n// app.use((req, res, next) => {\r\n//     const error = new Error('Not Found');\r\n//     error.message = 'Invalid Route';\r\n//     error.status = 404;\r\n//     next(error);\r\n\r\n// });\r\n\r\n// app.use(function(req, res, next) {\r\n//   //set headers to allow cross origin request.\r\n//   res.header('Access-Control-Allow-Origin', '*');\r\n//   res.header('Access-Control-Allow-Methods', 'PUT, GET, POST, DELETE, OPTIONS');\r\n//   res.header(\r\n//     'Access-Control-Allow-Headers',\r\n//     'Origin, X-Requested-With, Content-Type, Accept'\r\n//   );\r\n//   next();\r\n// });\r\n// // app.use(\r\n// //     '/api-docs',\r\n// //     swaggerUi.serve,\r\n// //     swaggerUi.setup(swaggerDocument, {\r\n// //         explorer: true,\r\n// //     })\r\n// // );\r\n// app.use((error, req, res, next) => {\r\n//     res.status(error.status || 500);\r\n//     return res.json({\r\n//         error: {\r\n//             message: error.message,\r\n//         },\r\n//     });\r\n// });\r\n\r\n\r\n// app.get('/', (req, res) => {\r\n//     res.json({\r\n//         msg: 'Welcome to appointment app'\r\n//     })\r\n// })\r\n\r\n// app.listen(PORT, () => {\r\n//     console.log(`server is running at port ${PORT}`);\r\n\r\n// })"]}